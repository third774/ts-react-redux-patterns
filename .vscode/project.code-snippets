{
  "Destructure": {
    "prefix": ["des", "destructure"],
    "body": ["const $2 = $1"],
    "description": "Destructure into const",
    "scope": "typescript,javascript,typescriptreact,javascriptreact"
  },
  "React Class Component (TypeScript)": {
    "prefix": ["rcc", "react class component"],
    "body": [
      "import React, { Component } from 'react';",
      "",
      "type Props = {",
      "  ${2}",
      "};",
      "",
      "type State = {",
      "  ${3}",
      "};",
      "",
      "class ${1:${TM_FILENAME/(.*)\\.tsx/${1:/capitalize}/}} extends Component<Props, State> {",
      "  render() {",
      "    return (",
      "      ${4:<div>",
      "        $1",
      "      </div>}",
      "    )",
      "  }",
      "}",
      "",
      "export default $1"
    ],
    "description": "Scaffold a React Class Component using the filename",
    "scope": "typescript,typescriptreact"
  },
  "React Class Component Connected (TypeScript)": {
    "prefix": ["rccc", "react class component connected"],
    "body": [
      "import React, { Component } from 'react';",
      "import { connect, ConnectedProps } from 'react-redux';",
      "",
      "type Props = {",
      "  ${2}",
      "};",
      "",
      "type State = {",
      "  ${3}",
      "};",
      "",
      "class ${1:${TM_FILENAME/(.*)\\.tsx/${1:/capitalize}/}} extends Component<Props & PropsFromRedux, State> {",
      "  render() {",
      "    return (",
      "      ${4:<div>",
      "        $1",
      "      </div>}",
      "    )",
      "  }",
      "}",
      "",
      "const connector = connect(",
      "  (state: any, props: Props) => ({",
      "    ",
      "  }),",
      "  {",
      "    ",
      "  }",
      ");",
      "",
      "type PropsFromRedux = ConnectedProps<typeof connector>;",
      "",
      "export default connector($1)"
    ],
    "description": "Scaffold a React Class Component using the filename",
    "scope": "typescript,typescriptreact"
  },
  "React Function Component (TypeScript)": {
    "prefix": ["rfc", "react function component"],
    "body": [
      "import React from 'react';",
      "",
      "type Props = {",
      "  ${2}",
      "}",
      "",
      "const ${1:${TM_FILENAME/(.*)\\.tsx/${1:/capitalize}/}}: React.FC<Props> = ({${3}}) => {",
      "  return (",
      "    ${4:<div>",
      "      ${1}",
      "    </div>}",
      "  )",
      "};",
      "",
      "export default $1"
    ],
    "description": "Create a React Function Component using the filename",
    "scope": "typescript,typescriptreact"
  },
  "React Function Component Connected (TypeScript)": {
    "prefix": ["rfcc", "react function component connected"],
    "body": [
      "import React from 'react';",
      "import { connect, ConnectedProps } from 'react-redux';",
      "",
      "type Props = {",
      "  ${2}",
      "};",
      "",
      "const ${1:${TM_FILENAME/(.*)\\.tsx/${1:/capitalize}/}}: React.FC<Props & PropsFromRedux> = ({${3}}) => {",
      "  return (",
      "    ${4:<div>",
      "      ${1}",
      "    </div>}",
      "  )",
      "};",
      "",
      "const connector = connect(",
      "  (state: any, props: Props) => ({",
      "    ",
      "  }),",
      "  {",
      "    ",
      "  }",
      ");",
      "",
      "type PropsFromRedux = ConnectedProps<typeof connector>;",
      "",
      "export default connector($1)"
    ],
    "description": "Scaffold a React Class Component using the filename",
    "scope": "typescript,typescriptreact"
  },
  "React Class Component (JavaScript)": {
    "prefix": ["rcc", "react class component"],
    "body": [
      "import React, { Component } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "class ${1:${TM_FILENAME/(.*)\\.jsx?/${1:/capitalize}/}} extends Component {",
      "  static propTypes = {",
      "    ${2}",
      "  }",
      "  ",
      "  render() {",
      "    return (",
      "      ${3:<div>",
      "        ${1}",
      "      </div>}",
      "    )",
      "  }",
      "}",
      "",
      "export default $1"
    ],
    "description": "Create new React Class Component using filename",
    "scope": "javascript,javascriptreact"
  },
  "React Function Component (JavaScript)": {
    "prefix": ["rfc", "react function component"],
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "const ${1:${TM_FILENAME/(.*)\\.jsx?/${1:/capitalize}/}} = ({${3}}) => {",
      "  return (",
      "    ${4:<div>",
      "      $1",
      "    </div>}",
      "  )",
      "}",
      "",
      "$1.propTypes = {",
      "  ${2}",
      "}",
      "",
      "export default ${1}",
      ""
    ],
    "description": "Create a React Function Component using filename",
    "scope": "javascript,javascriptreact"
  }
}
